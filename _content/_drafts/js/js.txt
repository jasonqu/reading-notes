http://learnxinyminutes.com/docs/zh-cn/javascript-cn/

快速入门的好教程

### 1. 数字、字符串与操作符

Javascript 只有一种数字类型(即 64位 IEEE 754 双精度浮点 double)。

false, null, undefined, NaN, 0 和 "" 都是假的；其他的都视作逻辑真

注意 0 是逻辑假而  "0"是逻辑真，尽管 0 == "0"。

### 2. 变量、数组和对象

变量需要用`var`关键字声明。Javascript是动态类型语言，所以你无需指定类型。

数组是任意类型组成的有序列表

javascript中的对象相当于其他语言中的“字典”或“映射”：是键-值对的无序集合。

3. 逻辑与控制结构

4. 函数、作用域、闭包

javascript中函数是一等对象，所以函数也能够赋给一个变量，并且被作为参数传递——比如一个事件处理函数：

JavaScript 有函数作用域；而其他的代码块则没有。
if (true){
    var i = 5;
}
i; // = 5 - 并非我们在其他语言中所期望得到的undefined

// 这就导致了人们经常使用的“立即执行匿名函数”的模式，
// 这样可以避免一些临时变量扩散到全局作用域去。
(function(){
    var temporary = 5;
    // 我们可以访问修改全局对象（"global object"）来访问全局作用域，
    // 在web浏览器中是`window`这个对象。 
    // 在其他环境如Node.js中这个对象的名字可能会不同。
    window.permanent = 10;
})();
temporary; // 抛出引用异常ReferenceError
permanent; // = 10

// javascript最强大的功能之一就是闭包。
// 如果一个函数在另一个函数中定义，那么这个内部函数就拥有外部函数的所有变量的访问权，
// 即使在外部函数结束之后。
function sayHelloInFiveSeconds(name){
    var prompt = "Hello, " + name + "!";
    // 内部函数默认是放在局部作用域的，
    // 就像是用`var`声明的。
    function inner(){
        alert(prompt);
    }
    setTimeout(inner, 5000);
    // setTimeout是异步的，所以 sayHelloInFiveSeconds 函数会立即退出，
    // 而 setTimeout 会在后面调用inner
    // 然而，由于inner是由sayHelloInFiveSeconds“闭合包含”的，
    // 所以inner在其最终被调用时仍然能够访问`prompt`变量。
}
sayHelloInFiveSeconds("Adam"); // 会在5秒后弹出 "Hello, Adam!"

### 5. 对象、构造函数与原型





















